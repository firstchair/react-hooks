import { act, renderHook } from '@testing-library/react';
import { {{camelCase hookName}} } from './{{camelCase hookName}}';

describe('{{camelCase hookName}}', () => {
  it('should not crash', async () => {
    renderHook({{camelCase hookName}}, {
      initialProps: undefined,
    });
  });

//  it('should have correct initial state', () => {
//    const { result } = renderHook({{camelCase hookName}}, {
//      initialProps: undefined,
//    });
//
//    expect(result.current[0]).toEqual(undefined);
//  });

//  it('should switch the value when calling toggle', async () => {
//    const { result } = renderHook(useToggle, {
//      initialProps: undefined,
//    });
//    expect(result.current[0]).toEqual(undefined);
//
//    await act(() => {
//      // execute something on the hook
//      result.current[1]();
//    });
//    expect(result.current[0]).toEqual(undefined);
//  });
});
